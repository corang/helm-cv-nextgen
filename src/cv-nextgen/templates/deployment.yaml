apiVersion: apps/v1
kind: Deployment
metadata:
  name: cv-nextgen
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "cv-nextgen.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "cv-nextgen.selectorLabels" . | nindent 6 }} 
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: {{ .Values.maxSurge }}
      maxUnavailable: {{ .Values.maxUnavailable }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "cv-nextgen.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}      
      serviceAccountName: {{ include "cv-nextgen.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: cv-nextgen
          image: {{ include "common.images.image" (dict "imageRoot" .Values.image "global" .Values.global) }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext:
              {{- toYaml .Values.securityContext | nindent 12 }}
          env:
            - name: MONGODB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: harness-secrets
                  key: mongodbUsername
            - name: MONGODB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: harness-secrets
                  key: mongodbPassword
            - name: MONGO_URI
              value: {{ include "harnesscommon.database.mongo" (dict "database" "cvng-harness" "context" $) }}
            - name : NOTIFICATION_MONGO_URI
              value: {{ include "harnesscommon.database.mongo" (dict "database" "notifications" "context" $) }}
            - name: PMS_MONGO_URI
              value: {{ include "harnesscommon.database.mongo" (dict "database" "pms-harness" "context" $) }}
          envFrom:
            - configMapRef:
                name: cv-nextgen
          resources:
              {{- toYaml .Values.resources | nindent 12 }}
          readinessProbe:
            httpGet:
              path: /cv/api/health
              port: cv
            initialDelaySeconds: 60
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /cv/api/health
              port: cv
            initialDelaySeconds: 300
            periodSeconds: 10
            failureThreshold: 2
          ports:
            - name: cv
              containerPort: {{.Values.service.port}}
              protocol: "TCP"
            - name: grpc-cv-ng
              containerPort: {{.Values.service.grpcport}}
              protocol: "TCP"      
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - cv-nextgen
            topologyKey: "kubernetes.io/hostname"
      {{- with .Values.affinity }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}